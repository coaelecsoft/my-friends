{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Desktop\\\\my-friends\\\\src\\\\components\\\\maps.js\";\nimport React from \"react\";\nimport \"./styles.css\";\nimport GoogleMapReact from \"google-map-react\";\nimport MyMarker from \"./MyMarker\"; // implementation of this function is needed for codesandbox example to work\n// you can remove it otherwise\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst distanceToMouse = (pt, mp) => {\n  if (pt && mp) {\n    // return distance between the marker and mouse pointer\n    return Math.sqrt((pt.x - mp.x) * (pt.x - mp.x) + (pt.y - mp.y) * (pt.y - mp.y));\n  }\n};\n\nconst points = [{\n  id: 1,\n  title: \"Karaburma\",\n  lat: 44.8166634,\n  lng: 20.499998\n}, {\n  id: 2,\n  title: \"Rakovica\",\n  lat: 44.7558470366,\n  lng: 20.4391699052\n}, {\n  id: 3,\n  title: \"Centar\",\n  lat: 44.7858470366,\n  lng: 20.4591699052\n}];\nexport default function Maps() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n      bootstrapURLKeys: {\n        // remove the key if you want to fork\n        key: \"AIzaSyBoV4ehpbFW1wb5EvZC34F89VLlczsBjgU\",\n        language: \"sr-latn\",\n        region: \"RS\"\n      },\n      defaultCenter: {\n        lat: 44.787197,\n        lng: 20.457273\n      },\n      defaultZoom: 11,\n      distanceToMouse: distanceToMouse,\n      children: points.map(_ref => {\n        let {\n          lat,\n          lng,\n          id,\n          title\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(MyMarker, {\n          lat: lat,\n          lng: lng,\n          text: id,\n          tooltip: title\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_c = Maps;\n\nvar _c;\n\n$RefreshReg$(_c, \"Maps\");","map":{"version":3,"sources":["C:/Users/Alex/Desktop/my-friends/src/components/maps.js"],"names":["React","GoogleMapReact","MyMarker","distanceToMouse","pt","mp","Math","sqrt","x","y","points","id","title","lat","lng","Maps","key","language","region","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AAGA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CAEA;AACA;;;;AACA,MAAMC,eAAe,GAAG,CAACC,EAAD,EAAKC,EAAL,KAAY;AAChC,MAAID,EAAE,IAAIC,EAAV,EAAc;AACV;AACA,WAAOC,IAAI,CAACC,IAAL,CACH,CAACH,EAAE,CAACI,CAAH,GAAOH,EAAE,CAACG,CAAX,KAAiBJ,EAAE,CAACI,CAAH,GAAOH,EAAE,CAACG,CAA3B,IAAgC,CAACJ,EAAE,CAACK,CAAH,GAAOJ,EAAE,CAACI,CAAX,KAAiBL,EAAE,CAACK,CAAH,GAAOJ,EAAE,CAACI,CAA3B,CAD7B,CAAP;AAGH;AACJ,CAPD;;AASA,MAAMC,MAAM,GAAG,CACX;AAAEC,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,WAAhB;AAA6BC,EAAAA,GAAG,EAAE,UAAlC;AAA8CC,EAAAA,GAAG,EAAE;AAAnD,CADW,EAEX;AAAEH,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,UAAhB;AAA4BC,EAAAA,GAAG,EAAE,aAAjC;AAAgDC,EAAAA,GAAG,EAAE;AAArD,CAFW,EAGX;AAAEH,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,QAAhB;AAA0BC,EAAAA,GAAG,EAAE,aAA/B;AAA8CC,EAAAA,GAAG,EAAE;AAAnD,CAHW,CAAf;AAMA,eAAe,SAASC,IAAT,GAAgB;AAC3B,sBACI;AAAM,IAAA,SAAS,EAAC,KAAhB;AAAA,2BACI,QAAC,cAAD;AACI,MAAA,gBAAgB,EAAE;AACd;AACAC,QAAAA,GAAG,EAAE,yCAFS;AAGdC,QAAAA,QAAQ,EAAE,SAHI;AAIdC,QAAAA,MAAM,EAAE;AAJM,OADtB;AAOI,MAAA,aAAa,EAAE;AAAEL,QAAAA,GAAG,EAAE,SAAP;AAAkBC,QAAAA,GAAG,EAAE;AAAvB,OAPnB;AAQI,MAAA,WAAW,EAAE,EARjB;AASI,MAAA,eAAe,EAAEX,eATrB;AAAA,gBAWKO,MAAM,CAACS,GAAP,CAAW,QAA6B;AAAA,YAA5B;AAAEN,UAAAA,GAAF;AAAOC,UAAAA,GAAP;AAAYH,UAAAA,EAAZ;AAAgBC,UAAAA;AAAhB,SAA4B;AACrC,4BACI,QAAC,QAAD;AAAmB,UAAA,GAAG,EAAEC,GAAxB;AAA6B,UAAA,GAAG,EAAEC,GAAlC;AAAuC,UAAA,IAAI,EAAEH,EAA7C;AAAiD,UAAA,OAAO,EAAEC;AAA1D,WAAeD,EAAf;AAAA;AAAA;AAAA;AAAA,gBADJ;AAGH,OAJA;AAXL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;KAtBuBI,I","sourcesContent":["import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\n\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport MyMarker from \"./MyMarker\";\r\n\r\n// implementation of this function is needed for codesandbox example to work\r\n// you can remove it otherwise\r\nconst distanceToMouse = (pt, mp) => {\r\n    if (pt && mp) {\r\n        // return distance between the marker and mouse pointer\r\n        return Math.sqrt(\r\n            (pt.x - mp.x) * (pt.x - mp.x) + (pt.y - mp.y) * (pt.y - mp.y)\r\n        );\r\n    }\r\n};\r\n\r\nconst points = [\r\n    { id: 1, title: \"Karaburma\", lat: 44.8166634, lng: 20.499998 },\r\n    { id: 2, title: \"Rakovica\", lat: 44.7558470366, lng: 20.4391699052 },\r\n    { id: 3, title: \"Centar\", lat: 44.7858470366, lng: 20.4591699052 }\r\n];\r\n\r\nexport default function Maps() {\r\n    return (\r\n        <div  className=\"App\">\r\n            <GoogleMapReact\r\n                bootstrapURLKeys={{\r\n                    // remove the key if you want to fork\r\n                    key: \"AIzaSyBoV4ehpbFW1wb5EvZC34F89VLlczsBjgU\",\r\n                    language: \"sr-latn\",\r\n                    region: \"RS\"\r\n                }}\r\n                defaultCenter={{ lat: 44.787197, lng: 20.457273 }}\r\n                defaultZoom={11}\r\n                distanceToMouse={distanceToMouse}\r\n            >\r\n                {points.map(({ lat, lng, id, title }) => {\r\n                    return (\r\n                        <MyMarker key={id} lat={lat} lng={lng} text={id} tooltip={title} />\r\n                    );\r\n                })}\r\n            </GoogleMapReact>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}